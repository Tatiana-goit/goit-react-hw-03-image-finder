{"version":3,"sources":["components/Searchbar/Searchbar.module.css","components/Searchbar/Searchbar.jsx","App.js","index.js"],"names":["module","exports","Searchbar","onSearch","className","s","SearchForm","onSubmit","e","preventDefault","target","elements","imageName","value","type","SearchForm_button","SearchForm_button_label","SearchForm_input","name","autoComplete","autoFocus","placeholder","Status","App","state","images","status","page","selectedImage","error","handleFormSubmit","setState","handleSelectImage","data","prevProps","prevState","a","this","axios","get","console","log","hits","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iLACAA,EAAOC,QAAU,CAAC,UAAY,6BAA6B,WAAa,8BAA8B,kBAAoB,qCAAqC,wBAA0B,2CAA2C,iBAAmB,sC,2KCoFxOC,EAjFG,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAQnB,OACE,8BACE,wBAAQC,UAAWC,IAAEH,UAArB,SACE,uBAAME,UAAWC,IAAEC,WAAYC,SATlB,SAAAC,GACnBA,EAAEC,iBAEFN,EAASK,EAAEE,OAAOC,SAASC,UAAUC,QAM/B,UACE,wBAAQC,KAAK,SAASV,UAAWC,IAAEU,kBAAnC,SACE,sBAAMX,UAAWC,IAAEW,wBAAnB,sBAGF,uBACEZ,UAAWC,IAAEY,iBACbH,KAAK,OACLI,KAAK,YACLC,aAAa,MACbC,WAAS,EACTC,YAAY,qC,iBChBlBC,EACE,OAMFC,E,4MACJC,MAAQ,CACNZ,UAAW,KACXa,OAAQ,GACRC,OAAQJ,EACRK,KAAM,EACNC,cAAc,KACdC,MAAO,M,EAiCTC,iBAAmB,SAAAlB,GACjB,EAAKmB,SAAS,CAACnB,e,EAKjBoB,kBAAoB,SAAAC,GAClB,EAAKF,SAAS,CAAEH,cAAeK,K,+FApCnC,WAAyBC,EAAWC,GAApC,iBAAAC,EAAA,yDACoB,qCACZD,EAAUvB,YAAcyB,KAAKb,MAAMZ,UAF3C,gCAI0B0B,IAAMC,IAAN,qCAAyCF,KAAKb,MAAMZ,UAApD,SAAsE,EAAtE,gBAHN,qCAGM,yDAJ1B,gBAIaqB,EAJb,EAIaA,KACPO,QAAQC,IAAIR,EAAKS,MACjBL,KAAKN,SAAS,CAACN,OAAQQ,EAAKS,OANlC,gD,6EAuCE,WACE,OACE,qBAAKtC,UAAU,MAAf,SACE,cAAC,EAAD,CAAWD,SAAUkC,KAAKP,yB,GArDhBa,aA8DHpB,ICzEfqB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.078eb83d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Searchbar\":\"Searchbar_Searchbar__YCjnu\",\"SearchForm\":\"Searchbar_SearchForm__1A5zo\",\"SearchForm_button\":\"Searchbar_SearchForm_button__2ITly\",\"SearchForm_button_label\":\"Searchbar_SearchForm_button_label__3jqUx\",\"SearchForm_input\":\"Searchbar_SearchForm_input__Zbzfi\"};","// import { Component } from 'react';\r\n// import toast, { Toaster } from 'react-hot-toast';\r\nimport s from './Searchbar.module.css';\r\n\r\nconst Searchbar = ({ onSearch }) => {\r\n\r\nconst handleSearch = e => {\r\n  e.preventDefault();\r\n  // console.log(e.target.elements.imageName.value);\r\n  onSearch(e.target.elements.imageName.value);\r\n}\r\n\r\n  return (\r\n    <div>\r\n      <header className={s.Searchbar}>\r\n        <form className={s.SearchForm} onSubmit={handleSearch}>\r\n          <button type=\"submit\" className={s.SearchForm_button}>\r\n            <span className={s.SearchForm_button_label}>Search</span>\r\n          </button>\r\n\r\n          <input\r\n            className={s.SearchForm_input}\r\n            type=\"text\"\r\n            name='imageName'\r\n            autoComplete=\"off\"\r\n            autoFocus\r\n            placeholder=\"Search images and photos\"\r\n          />\r\n          {/* <Toaster /> */}\r\n        </form>\r\n      </header>\r\n    </div>\r\n  );\r\n};\r\n\r\n// class Searchbar extends Component {\r\n//     state = {\r\n//         value: '',\r\n//     }\r\n\r\n//   handleInputValue = e => {\r\n//         this.setState({ value: e.target.value.toLowerCase()})\r\n//     }\r\n\r\n//   handleSubmit = (e) => {\r\n//         e.preventDefault();\r\n\r\n//         if (this.state.value.trim() === '') {\r\n//             toast.error('Input picture`s name.')\r\n//             return;\r\n//         }\r\n//         this.props.onSearch(this.state.value);\r\n//         this.resetInput();\r\n//     }\r\n\r\n//   resetInput = () => {\r\n//     this.setState({ value: '' });\r\n// }\r\n\r\n//   render() {\r\n//     return (\r\n//       <div>\r\n//         <header className={s.Searchbar}>\r\n//           <form className={s.SearchForm} onSubmit={this.handleSubmit}>\r\n//             <button type=\"submit\" className={s.SearchForm_button}>\r\n//               <span className={s.SearchForm_button_label}>Search</span>\r\n//             </button>\r\n\r\n//             <input\r\n//               className={s.SearchForm_input}\r\n//               type=\"text\"\r\n//               autoComplete=\"off\"\r\n//               autoFocus\r\n//               placeholder=\"Search images and photos\"\r\n//               onChange={this.handleInputValue}\r\n//             />\r\n//            <Toaster/>\r\n\r\n//           </form>\r\n//         </header>\r\n//       </div>\r\n//     );\r\n//   }\r\n// }\r\n\r\nexport default Searchbar;\r\n","import './App.css';\nimport { Component } from 'react';\n// import toast, { Toaster } from 'react-hot-toast';\nimport Searchbar from './components/Searchbar/Searchbar';\n// import ImageGallery from './components/ImageGallery/ImageGallery';\nimport axios from 'axios';\n// import Modal from './components/Modal/Modal';\n// import Button from './components/Button/Button';\n// import api from './services/gallery-api';\n\nconst Status = {\n  IDLE: 'idle',\n  PENDING: 'pending',\n  RESOLVED: 'resolved',\n  REJECTED: 'rejected',\n};\n\nclass App extends Component {\n  state = {\n    imageName: null,\n    images: [],\n    status: Status.IDLE,\n    page: 1,\n    selectedImage:null,\n    error: null,\n}\n\n\nasync componentDidUpdate(prevProps, prevState) {\n    const API_KEY = '21768835-de3419a52772d349dcef7b4fc';\n    if (prevState.imageName !== this.state.imageName) {\n      \n      const {data}= await axios.get( `https://pixabay.com/api/?q=${this.state.imageName}&page=${1}&key=${API_KEY}&image_type=photo&orientation=horizontal&per_page=12`)\n      console.log(data.hits);\n      this.setState({images: data.hits})\n     }\n  }\n  \n\n  // componentDidUpdate(prevProps, prevState) {\n  //   const { status, imageName,images, page } = this.state;\n  //   if (status === Status.RESOLVED && images.length === 0) {\n  //       toast.error(`Oops, we did not find such picture as ${imageName}`);\n  //       this.setState({ status: Status.IDLE });\n  //   }\n\n  //   if (status === Status.PENDING) {\n  //       api\n  //       .fetchImages(imageName, page)\n  //       .then(newImages => this.setState(prevState => ({\n  //           images: [...prevState.images, ...newImages],\n  //           status: Status.RESOLVED,\n  //       })))\n  //       .catch(error => this.setState({ error, status: Status.REJECTED }));\n  //   }\n  // }\n\n  handleFormSubmit = imageName => {\n    this.setState({imageName})\n  }\n\n   \n\n  handleSelectImage = data => {\n    this.setState({ selectedImage: data, });  \n}\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Searchbar onSearch={this.handleFormSubmit} />\n        {/* <Toaster /> */}\n        {/* <ImageGallery images={this.state.images} onSelect={this.handleSelectImage}/> */}\n\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}